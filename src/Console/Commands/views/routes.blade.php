@php
echo '<?php'
@endphp

/**
 * DO NOT EDIT!!!
 * Autogenerated CRUD routes for module {{\Illuminate\Support\Str::ucfirst($module)}}
 * If custom routes are needed for this module
 * please define them in {{\Illuminate\Support\Str::ucfirst($module)}}/Routes/custom/ directory, they will be automatically loaded
 */

use Illuminate\Support\Facades\Route;

@foreach($models as $model)
/**
 * CRUD routes for model {{$model['class']}}
 */
Route::group(["prefix" => "{{$routePrefix}}{{$model['name']}}"], function ($router) {
    /**
     * @OA\Get(
     *     path="/{{$routePrefix}}{{$model['name']}}",
     *     operationId="get{{str_replace('\\', '', $namespace)}}{{$model['originalName']}}List",
     *     tags={"{{$namespace}}\{{$model['originalName']}}"},
     *     summary="Get {{$model['humanName']}} list.",
     *     @OA\Response(
     *         response=200,
     *         description="Successful.",
     *         @OA\JsonContent(
     *             @OA\Property(
     *                 property="data",
     *                 type="array",
     *                 @OA\Items(ref="#/components/schemas/{{$namespace}}\{{$model['originalName']}}")
     *             ),
     *             @OA\Property(
     *                 property="links",
     *                 type="object",
     *                 properties={
     *                     @OA\Property(property="first", type="string"),
     *                     @OA\Property(property="last", type="string"),
     *                     @OA\Property(property="next", type="string"),
     *                     @OA\Property(property="prev", type="string")
     *                 }
     *             ),
     *             @OA\Property(
     *                 property="meta",
     *                 type="object",
     *                 properties={
     *                     @OA\Property(property="current_page", type="integer"),
     *                     @OA\Property(property="from", type="string"),
     *                     @OA\Property(property="last_page", type="integer"),
     *                     @OA\Property(
     *                         property="links",
     *                         type="array",
     *                         @OA\Items(
     *                             type="object",
     *                             properties={
     *                                 @OA\Property(property="active", type="boolean"),
     *                                 @OA\Property(property="label", type="string"),
     *                                 @OA\Property(property="url", type="string")
     *                             }
     *                         ),
     *                     ),
     *                     @OA\Property(property="path", type="string"),
     *                     @OA\Property(property="per_page", type="integer"),
     *                     @OA\Property(property="to", type="integer"),
     *                     @OA\Property(property="total", type="integer")
     *                 }
     *             )
     *         )
     *     ),
     *     @OA\Response(response=400, description="Bad request."),
     *     @OA\Response(response=401, description="Unauthenticated.", @OA\JsonContent(@OA\Property(property="message", type="string", default="Unauthenticated."))),
     *     @OA\Response(response=500, description="Internal server error.")
     * )
     */
    $router->get('/', ['uses' => '\{{$model['controller']}}@readMore', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
    /**
     * @OA\Get(
     *     path="/{{$routePrefix}}{{$model['name']}}/{id}",
     *     operationId="get{{str_replace('\\', '', $namespace)}}{{$model['originalName']}}",
     *     tags={"{{$namespace}}\{{$model['originalName']}}"},
     *     summary="Get {{$model['humanName']}}.",
     *     @OA\Parameter(name="id", in="path", required=true, @OA\Schema(type="string", format="uuid")),
     *     @OA\Response(response=200, description="Successful operation", @OA\JsonContent(ref="#/components/schemas/{{$namespace}}\{{$model['originalName']}}")),
     *     @OA\Response(response=401, description="Unauthenticated.", @OA\JsonContent(@OA\Property(property="message", type="string", default="Unauthenticated.")))
     * )
     */
    $router->get('/{id}', ['uses' => '\{{$model['controller']}}@readOne', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
    /**
     * @OA\Post(
     *     path="/{{$routePrefix}}{{$model['name']}}",
     *     operationId="create{{str_replace('\\', '', $namespace)}}{{$model['originalName']}}",
     *     tags={"{{$namespace}}\{{$model['originalName']}}"},
     *     summary="Create {{$model['humanName']}}.",
     *     requestBody={"$ref": "#/components/requestBodies/{{$namespace}}\{{$model['originalName']}}"},
     *     @OA\Response(response=201, description="Null response"),
     *     @OA\Response(response=401, description="Unauthenticated.", @OA\JsonContent(@OA\Property(property="message", type="string", default="Unauthenticated.")))
     * )
     */
    $router->post('/', ['uses' => '\{{$model['controller']}}@create', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
    /**
     * @OA\Put(
     *     path="/{{$routePrefix}}{{$model['name']}}/{id}",
     *     operationId="put{{str_replace('\\', '', $namespace)}}{{$model['originalName']}}",
     *     tags={"{{$namespace}}\{{$model['originalName']}}"},
     *     summary="Put {{$model['humanName']}}.",
     *     requestBody={"$ref": "#/components/requestBodies/{{$namespace}}\{{$model['originalName']}}"},
     *     @OA\Parameter(name="id", in="path", required=true, @OA\Schema(type="string", format="uuid")),
     *     @OA\Response(response=400, description="Invalid ID supplied."),
     *     @OA\Response(
     *         response=401,
     *         description="Unauthenticated.",
     *         @OA\JsonContent(
     *             @OA\Property(property="message", type="string", default="Unauthenticated.")
     *         )
     *     ),
     *     @OA\Response(response=404, description="{{ucfirst($model['humanName'])}} not found.")
     * )
     */
    $router->put('/{id}', ['uses' => '\{{$model['controller']}}@update', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
    /**
     * @OA\Delete(
     *     path="/{{$routePrefix}}{{$model['name']}}/{id}",
     *     operationId="delete{{str_replace('\\', '', $namespace)}}{{$model['originalName']}}",
     *     tags={"{{$namespace}}\{{$model['originalName']}}"},
     *     summary="Delete {{$model['humanName']}}.",
     *     @OA\Parameter(name="id", in="path", required=true, @OA\Schema(type="string", format="uuid")),
     *     @OA\Response(response=204, description="No content, delete successful."),
     *     @OA\Response(response=400, description="Invalid ID supplied."),
     *     @OA\Response(response=401, description="Unauthenticated.", @OA\JsonContent(@OA\Property(property="message", type="string", default="Unauthenticated."))),
     *     @OA\Response(response=404, description="{{ucfirst($model['humanName'])}} not found."),
     *     @OA\Response(response=500, description="Internal server error.")
     * )
     */
    $router->delete('/{id}', ['uses' => '\{{$model['controller']}}@delete', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
    $router->put('/{id}/relation/{relationField}', ['uses' => '\{{$model['controller']}}@addRelation', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
    $router->delete('/{id}/relation/{relationField}/{relationId}', ['uses' => '\{{$model['controller']}}@removeRelation', 'model' => '{{$model['name']}}', 'namespace' => '{{$namespace}}']);
});
@endforeach